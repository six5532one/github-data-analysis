swagger: "2.0"

host: "indexer.pro.mup-pro.meetuphq.io"

schemes: [ https ]

info:
  version: "0.0.0"
  title: Indexer service

paths:
  /indexer/{id}:
    get:
      description: Fetch the indexer entity by the given id
      operationId: indexerGet
      parameters:
        - name: id
          in: path
          description: The id of the indexer entity to fetch
          required: true
          type: integer
          format: int64
      responses:
        200:
          description: The corresponding indexer entity
          schema:
            $ref: "#/definitions/IndexerEntity"
        404:
          description: No such indexer entity exists with the given id

    delete:
      operationId: indexerDelete
      parameters:
        - name: id
          in: path
          description: The id of the indexer entity to delete
          required: true
          type: integer
          format: int64
      responses:
        204:
          description: Confirmation that the indexer entity was deleted or is in the process of being deleted
        404:
          description: No such indexer entity exists with the given id

  /indexer:
    post:
      description: Create a indexer entity
      operationId: indexerPost
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: "#/definitions/IndexerEntityCreate"
      responses:
        201:
          description: The newly created indexer entity
          schema:
            $ref: "#/definitions/IndexerEntity"

definitions:
  CodeOfConduct:
    description: abc
    required:
      - body
    properties:
      body:
        type: string

  CodesOfConductData:
    description: bcd
    required:
      - codesOfConduct
    properties:
      codesOfConduct:
        type: array
        items:
          $ref: "#/definitions/CodeOfConduct"

  CodesOfConductResponse:
    description: aaa
    required:
      - data
    properties:
      data:
        $ref: "#/definitions/CodesOfConductData"

  RepositoryIssues:
    required:
      - totalCount
    properties:
      totalCount:
        type: integer

  Repository:
    required:
      - name
      - isPrivate
      - forkCount
      - issues
    properties:
      name:
        type: string
      isPrivate:
        type: boolean
      forkCount:
        type: integer
      issues:
        $ref: "#/definitions/RepositoryIssues"

  OrganizationRepositoryEdge:
    required:
      - cursor
      - node
    properties:
      cursor:
        type: string
      node:
        $ref: "#/definitions/Repository"

  OrganizationRepositoriesConnection:
    required:
      - edges
    properties:
      edges:
        type: array
        items:
          $ref: "#/definitions/OrganizationRepositoryEdge"

  Organization:
    required:
      - repositories
    properties:
      repositories:
        $ref: "#/definitions/OrganizationRepositoriesConnection"

  OrganizationData:
    required:
      - organization
    properties:
      organization:
        $ref: "#/definitions/Organization"

  OrganizationResponse:
    required:
      - data
    properties:
      data:
        $ref: "#/definitions/OrganizationData"